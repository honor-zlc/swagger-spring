/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Error;
import io.swagger.model.InvitationCloseReq;
import io.swagger.model.InvitationGetReq;
import io.swagger.model.InvitationGetRes;
import io.swagger.model.InvitationGetbaseinfobydocidReq;
import io.swagger.model.InvitationGetbaseinfobydocidRes;
import io.swagger.model.InvitationGetnoteinfobydocidReq;
import io.swagger.model.InvitationGetnoteinfobydocidRes;
import io.swagger.model.InvitationJoinReq;
import io.swagger.model.InvitationJoinRes;
import io.swagger.model.InvitationOpenReq;
import io.swagger.model.InvitationOpenRes;
import io.swagger.model.InvitationSetbaseinfoReq;
import io.swagger.model.InvitationSetnoteinfoReq;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-10T06:15:45.348Z[GMT]")
@Api(value = "invitation", description = "the invitation API")
public interface InvitationApi {

    @ApiOperation(value = "关闭共享邀请链接", nickname = "invitationClosePost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "共享邀请管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/invitation/close",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> invitationClosePost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody InvitationCloseReq body
);


    @ApiOperation(value = "获取共享邀请信息", nickname = "invitationGetPost", notes = "", response = InvitationGetRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "共享邀请管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = InvitationGetRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/invitation/get",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<InvitationGetRes> invitationGetPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody InvitationGetReq body
);


    @ApiOperation(value = "获取共享邀请基本信息", nickname = "invitationGetbaseinfobydocidPost", notes = "", response = InvitationGetbaseinfobydocidRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "共享邀请管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = InvitationGetbaseinfobydocidRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/invitation/getbaseinfobydocid",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<InvitationGetbaseinfobydocidRes> invitationGetbaseinfobydocidPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody InvitationGetbaseinfobydocidReq body
);


    @ApiOperation(value = "获取共享邀请图片备注信息", nickname = "invitationGetnoteinfobydocidPost", notes = "", response = InvitationGetnoteinfobydocidRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "共享邀请管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = InvitationGetnoteinfobydocidRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/invitation/getnoteinfobydocid",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<InvitationGetnoteinfobydocidRes> invitationGetnoteinfobydocidPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody InvitationGetnoteinfobydocidReq body
);


    @ApiOperation(value = "加入共享邀请", nickname = "invitationJoinPost", notes = "", response = InvitationJoinRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "共享邀请管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = InvitationJoinRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/invitation/join",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<InvitationJoinRes> invitationJoinPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody InvitationJoinReq body
);


    @ApiOperation(value = "开启共享邀请链接", nickname = "invitationOpenPost", notes = "", response = InvitationOpenRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "共享邀请管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = InvitationOpenRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/invitation/open",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<InvitationOpenRes> invitationOpenPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody InvitationOpenReq body
);


    @ApiOperation(value = "设置共享邀请基本信息", nickname = "invitationSetbaseinfoPost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "共享邀请管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/invitation/setbaseinfo",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> invitationSetbaseinfoPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody InvitationSetbaseinfoReq body
);


    @ApiOperation(value = "设置共享邀请图片备注信息", nickname = "invitationSetnoteinfoPost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "共享邀请管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/invitation/setnoteinfo",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> invitationSetnoteinfoPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody InvitationSetnoteinfoReq body
);

}


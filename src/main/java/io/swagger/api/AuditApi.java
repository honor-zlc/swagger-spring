/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.AuditApproveReq;
import io.swagger.model.AuditApproveRes;
import io.swagger.model.AuditApprovedocReq;
import io.swagger.model.AuditApprovedocRes;
import io.swagger.model.AuditGetapplyhistoryReq;
import io.swagger.model.AuditGetapplyhistoryRes;
import io.swagger.model.AuditGetapplyhistorycountRes;
import io.swagger.model.AuditGetapplysReq;
import io.swagger.model.AuditGetapplysRes;
import io.swagger.model.AuditGetapprovehistoryReq;
import io.swagger.model.AuditGetapprovehistoryRes;
import io.swagger.model.AuditGetapprovehistorycountRes;
import io.swagger.model.AuditGetdocapplysRes;
import io.swagger.model.AuditGetdocapprovalsRes;
import io.swagger.model.AuditGetdocprocessesRes;
import io.swagger.model.AuditGetpendingapprovalsReq;
import io.swagger.model.AuditGetpendingapprovalsRes;
import io.swagger.model.AuditGetpendingapprovalscountsRes;
import io.swagger.model.AuditGetshareapplyhistorycountRes;
import io.swagger.model.AuditGetshareapprovehistoryReq;
import io.swagger.model.AuditGetshareapprovehistoryRes;
import io.swagger.model.AuditGetshareapprovehistorycountRes;
import io.swagger.model.AuditPublishdocReq;
import io.swagger.model.AuditPublishdocRes;
import io.swagger.model.Error;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-10T06:15:45.348Z[GMT]")
@Api(value = "audit", description = "the audit API")
public interface AuditApi {

    @ApiOperation(value = "共享审核", nickname = "auditApprovePost", notes = "", response = AuditApproveRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditApproveRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/approve",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AuditApproveRes> auditApprovePost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody AuditApproveReq body
);


    @ApiOperation(value = "流程审核", nickname = "auditApprovedocPost", notes = "", response = AuditApprovedocRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditApprovedocRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/approvedoc",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AuditApprovedocRes> auditApprovedocPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody AuditApprovedocReq body
);


    @ApiOperation(value = "获取流程申请历史", nickname = "auditGetapplyhistoryPost", notes = "", response = AuditGetapplyhistoryRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetapplyhistoryRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getapplyhistory",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AuditGetapplyhistoryRes> auditGetapplyhistoryPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody AuditGetapplyhistoryReq body
);


    @ApiOperation(value = "获取流程申请历史总数", nickname = "auditGetapplyhistorycountPost", notes = "", response = AuditGetapplyhistorycountRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetapplyhistorycountRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getapplyhistorycount",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<AuditGetapplyhistorycountRes> auditGetapplyhistorycountPost();


    @ApiOperation(value = "获取我的共享申请", nickname = "auditGetapplysPost", notes = "", response = AuditGetapplysRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetapplysRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getapplys",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AuditGetapplysRes> auditGetapplysPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody AuditGetapplysReq body
);


    @ApiOperation(value = "获取流程审核历史", nickname = "auditGetapprovehistoryPost", notes = "", response = AuditGetapprovehistoryRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetapprovehistoryRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getapprovehistory",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AuditGetapprovehistoryRes> auditGetapprovehistoryPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody AuditGetapprovehistoryReq body
);


    @ApiOperation(value = "获取流程审核历史数量", nickname = "auditGetapprovehistorycountPost", notes = "", response = AuditGetapprovehistorycountRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetapprovehistorycountRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getapprovehistorycount",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<AuditGetapprovehistorycountRes> auditGetapprovehistorycountPost();


    @ApiOperation(value = "获取申请中的流程信息", nickname = "auditGetdocapplysPost", notes = "", response = AuditGetdocapplysRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetdocapplysRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getdocapplys",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<AuditGetdocapplysRes> auditGetdocapplysPost();


    @ApiOperation(value = "获取待审核的流程信息", nickname = "auditGetdocapprovalsPost", notes = "", response = AuditGetdocapprovalsRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetdocapprovalsRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getdocapprovals",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<AuditGetdocapprovalsRes> auditGetdocapprovalsPost();


    @ApiOperation(value = "获取所有流程信息", nickname = "auditGetdocprocessesPost", notes = "", response = AuditGetdocprocessesRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetdocprocessesRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getdocprocesses",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<AuditGetdocprocessesRes> auditGetdocprocessesPost();


    @ApiOperation(value = "获取待审核的共享申请", nickname = "auditGetpendingapprovalsPost", notes = "", response = AuditGetpendingapprovalsRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetpendingapprovalsRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getpendingapprovals",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AuditGetpendingapprovalsRes> auditGetpendingapprovalsPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody AuditGetpendingapprovalsReq body
);


    @ApiOperation(value = "获取待审核的申请数", nickname = "auditGetpendingapprovalscountsPost", notes = "", response = AuditGetpendingapprovalscountsRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetpendingapprovalscountsRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getpendingapprovalscounts",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<AuditGetpendingapprovalscountsRes> auditGetpendingapprovalscountsPost();


    @ApiOperation(value = "获取共享申请历史", nickname = "auditGetshareapplyhistoryPost", notes = "", response = AuditGetpendingapprovalsRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetpendingapprovalsRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getshareapplyhistory",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AuditGetpendingapprovalsRes> auditGetshareapplyhistoryPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody AuditGetpendingapprovalsReq body
);


    @ApiOperation(value = "获取共享申请历史数量", nickname = "auditGetshareapplyhistorycountPost", notes = "", response = AuditGetshareapplyhistorycountRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetshareapplyhistorycountRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getshareapplyhistorycount",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<AuditGetshareapplyhistorycountRes> auditGetshareapplyhistorycountPost();


    @ApiOperation(value = "获取共享审核历史", nickname = "auditGetshareapprovehistoryPost", notes = "", response = AuditGetshareapprovehistoryRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetshareapprovehistoryRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getshareapprovehistory",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AuditGetshareapprovehistoryRes> auditGetshareapprovehistoryPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody AuditGetshareapprovehistoryReq body
);


    @ApiOperation(value = "获取共享审核历史总数", nickname = "auditGetshareapprovehistorycountPost", notes = "", response = AuditGetshareapprovehistorycountRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditGetshareapprovehistorycountRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/getshareapprovehistorycount",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<AuditGetshareapprovehistorycountRes> auditGetshareapprovehistorycountPost();


    @ApiOperation(value = "发起流程申请", nickname = "auditPublishdocPost", notes = "", response = AuditPublishdocRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "审核管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = AuditPublishdocRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/audit/publishdoc",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AuditPublishdocRes> auditPublishdocPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody AuditPublishdocReq body
);

}


/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Error;
import io.swagger.model.FavoritesAddReq;
import io.swagger.model.FavoritesCheckReq;
import io.swagger.model.FavoritesCheckResItem;
import io.swagger.model.FavoritesDeleteReq;
import io.swagger.model.FavoritesListResItem;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-10T06:15:45.348Z[GMT]")
@Api(value = "favorites", description = "the favorites API")
public interface FavoritesApi {

    @ApiOperation(value = "添加收藏", nickname = "favoritesAddPost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "文档收藏协议", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/favorites/add",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> favoritesAddPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody FavoritesAddReq body
);


    @ApiOperation(value = "批量查询收藏状态", nickname = "favoritesCheckPost", notes = "", response = FavoritesCheckResItem.class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "文档收藏协议", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = FavoritesCheckResItem.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/favorites/check",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<List<FavoritesCheckResItem>> favoritesCheckPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody FavoritesCheckReq body
);


    @ApiOperation(value = "删除收藏", nickname = "favoritesDeletePost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "文档收藏协议", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/favorites/delete",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> favoritesDeletePost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody FavoritesDeleteReq body
);


    @ApiOperation(value = "获取收藏列表", nickname = "favoritesListPost", notes = "", response = FavoritesListResItem.class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "文档收藏协议", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = FavoritesListResItem.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/favorites/list",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<List<FavoritesListResItem>> favoritesListPost();

}


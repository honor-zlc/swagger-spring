/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.DeviceDisableReq;
import io.swagger.model.DeviceEnableReq;
import io.swagger.model.DeviceEraseReq;
import io.swagger.model.DeviceGetstatusReq;
import io.swagger.model.DeviceGetstatusRes;
import io.swagger.model.DeviceListRes;
import io.swagger.model.DeviceOnerasesucReq;
import io.swagger.model.Error;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-10T06:15:45.348Z[GMT]")
@Api(value = "device", description = "the device API")
public interface DeviceApi {

    @ApiOperation(value = "禁用设备", nickname = "deviceDisablePost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "登录设备管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节") })
    @RequestMapping(value = "/device/disable",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> deviceDisablePost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody DeviceDisableReq body
);


    @ApiOperation(value = "启用设备", nickname = "deviceEnablePost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "登录设备管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节") })
    @RequestMapping(value = "/device/enable",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> deviceEnablePost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody DeviceEnableReq body
);


    @ApiOperation(value = "擦除缓存", nickname = "deviceErasePost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "登录设备管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节") })
    @RequestMapping(value = "/device/erase",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> deviceErasePost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody DeviceEraseReq body
);


    @ApiOperation(value = "获取设备状态（mobile）", nickname = "deviceGetstatusPost", notes = "", response = DeviceGetstatusRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "登录设备管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = DeviceGetstatusRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节") })
    @RequestMapping(value = "/device/getstatus",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<DeviceGetstatusRes> deviceGetstatusPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody DeviceGetstatusReq body
);


    @ApiOperation(value = "获取所有设备信息", nickname = "deviceListPost", notes = "", response = DeviceListRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "登录设备管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = DeviceListRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/device/list",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<DeviceListRes> deviceListPost();


    @ApiOperation(value = "通知AnyShare缓存擦除成功（mobile）", nickname = "deviceOnerasesucPost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "登录设备管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节") })
    @RequestMapping(value = "/device/onerasesuc",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> deviceOnerasesucPost(@NotNull @ApiParam(value = "用户唯一标识", required = true) @Valid @RequestParam(value = "userid", required = true) String userid
,@ApiParam(value = "" ,required=true )  @Valid @RequestBody DeviceOnerasesucReq body
);

}


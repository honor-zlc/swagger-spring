/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Error;
import io.swagger.model.RecycleDeleteReq;
import io.swagger.model.RecycleGetretentiondaysReq;
import io.swagger.model.RecycleGetretentiondaysRes;
import io.swagger.model.RecycleGetsuggestnameReq;
import io.swagger.model.RecycleGetsuggestnameRes;
import io.swagger.model.RecycleListReq;
import io.swagger.model.RecycleListRes;
import io.swagger.model.RecycleRestoreReq;
import io.swagger.model.RecycleRestoreRes;
import io.swagger.model.RecycleSetretentiondaysReq;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-10T06:15:45.348Z[GMT]")
@Api(value = "recycle", description = "the recycle API")
public interface RecycleApi {

    @ApiOperation(value = "删除回收站资源协议", nickname = "recycleDeletePost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "回收站协议", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/recycle/delete",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> recycleDeletePost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RecycleDeleteReq body
);


    @ApiOperation(value = "获取回收站保留天数", nickname = "recycleGetretentiondaysPost", notes = "", response = RecycleGetretentiondaysRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "回收站协议", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = RecycleGetretentiondaysRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/recycle/getretentiondays",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<RecycleGetretentiondaysRes> recycleGetretentiondaysPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RecycleGetretentiondaysReq body
);


    @ApiOperation(value = "获取回收站还原后的建议名称协议", nickname = "recycleGetsuggestnamePost", notes = "", response = RecycleGetsuggestnameRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "回收站协议", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = RecycleGetsuggestnameRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/recycle/getsuggestname",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<RecycleGetsuggestnameRes> recycleGetsuggestnamePost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RecycleGetsuggestnameReq body
);


    @ApiOperation(value = "浏览回收站资源协议", nickname = "recycleListPost", notes = "当请求中有多个查找的关键词时，将返回根据每个关键词查找的结果的交集。", response = RecycleListRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "回收站协议", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = RecycleListRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/recycle/list",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<RecycleListRes> recycleListPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RecycleListReq body
);


    @ApiOperation(value = "还原回收站资源协议", nickname = "recycleRestorePost", notes = "", response = RecycleRestoreRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "回收站协议", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = RecycleRestoreRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/recycle/restore",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<RecycleRestoreRes> recycleRestorePost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RecycleRestoreReq body
);


    @ApiOperation(value = "设置回收站保留天数", nickname = "recycleSetretentiondaysPost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "回收站协议", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/recycle/setretentiondays",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> recycleSetretentiondaysPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RecycleSetretentiondaysReq body
);

}


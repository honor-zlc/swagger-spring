/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Entrydoc2GetReq;
import io.swagger.model.Entrydoc2GetRes;
import io.swagger.model.Entrydoc2GetdocinfoReq;
import io.swagger.model.Entrydoc2GetdocinfoRes;
import io.swagger.model.Entrydoc2GetdocquotaReq;
import io.swagger.model.Entrydoc2GetdocquotaRes;
import io.swagger.model.Entrydoc2GetmanagedRes;
import io.swagger.model.Entrydoc2GetuserquotaRes;
import io.swagger.model.Error;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-10T06:15:45.348Z[GMT]")
@Api(value = "entrydoc2", description = "the entrydoc2 API")
public interface Entrydoc2Api {

    @ApiOperation(value = "获取文档库", nickname = "entrydoc2GetPost", notes = "", response = Entrydoc2GetRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "入口文档库", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = Entrydoc2GetRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/entrydoc2/get",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Entrydoc2GetRes> entrydoc2GetPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Entrydoc2GetReq body
);


    @ApiOperation(value = "获取文档库信息", nickname = "entrydoc2GetdocinfoPost", notes = "", response = Entrydoc2GetdocinfoRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "入口文档库", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = Entrydoc2GetdocinfoRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/entrydoc2/getdocinfo",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Entrydoc2GetdocinfoRes> entrydoc2GetdocinfoPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Entrydoc2GetdocinfoReq body
);


    @ApiOperation(value = "获取文档库配额", nickname = "entrydoc2GetdocquotaPost", notes = "", response = Entrydoc2GetdocquotaRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "入口文档库", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = Entrydoc2GetdocquotaRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/entrydoc2/getdocquota",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Entrydoc2GetdocquotaRes> entrydoc2GetdocquotaPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Entrydoc2GetdocquotaReq body
);


    @ApiOperation(value = "获取用户管理的文档库", nickname = "entrydoc2GetmanagedPost", notes = "", response = Entrydoc2GetmanagedRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "入口文档库", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = Entrydoc2GetmanagedRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/entrydoc2/getmanaged",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Entrydoc2GetmanagedRes> entrydoc2GetmanagedPost();


    @ApiOperation(value = "获取用户配额", nickname = "entrydoc2GetuserquotaPost", notes = "", response = Entrydoc2GetuserquotaRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "入口文档库", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = Entrydoc2GetuserquotaRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/entrydoc2/getuserquota",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Entrydoc2GetuserquotaRes> entrydoc2GetuserquotaPost();

}


/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Error;
import io.swagger.model.GroupdocAddReq;
import io.swagger.model.GroupdocAddRes;
import io.swagger.model.GroupdocDeleteReq;
import io.swagger.model.GroupdocEditReq;
import io.swagger.model.GroupdocEditquotaReq;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-10T06:15:45.348Z[GMT]")
@Api(value = "groupdoc", description = "the groupdoc API")
public interface GroupdocApi {

    @ApiOperation(value = "创建群组文档", nickname = "groupdocAddPost", notes = "", response = GroupdocAddRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "群组文档管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = GroupdocAddRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/groupdoc/add",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<GroupdocAddRes> groupdocAddPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody GroupdocAddReq body
);


    @ApiOperation(value = "删除群组", nickname = "groupdocDeletePost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "群组文档管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/groupdoc/delete",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> groupdocDeletePost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody GroupdocDeleteReq body
);


    @ApiOperation(value = "编辑群组名称", nickname = "groupdocEditPost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "群组文档管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/groupdoc/edit",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> groupdocEditPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody GroupdocEditReq body
);


    @ApiOperation(value = "编辑群组配额", nickname = "groupdocEditquotaPost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "群组文档管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/groupdoc/editquota",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> groupdocEditquotaPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody GroupdocEditquotaReq body
);

}


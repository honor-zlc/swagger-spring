/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ContactorAddgroupReq;
import io.swagger.model.ContactorAddgroupRes;
import io.swagger.model.ContactorAddpersonsReq;
import io.swagger.model.ContactorDeletegroupReq;
import io.swagger.model.ContactorDeletepersonsReq;
import io.swagger.model.ContactorEditgroupReq;
import io.swagger.model.ContactorGetReq;
import io.swagger.model.ContactorGetRes;
import io.swagger.model.ContactorGetgroupsRes;
import io.swagger.model.ContactorGetpersonsReq;
import io.swagger.model.ContactorGetpersonsRes;
import io.swagger.model.ContactorSearchReq;
import io.swagger.model.ContactorSearchRes;
import io.swagger.model.ContactorSearchcountReq;
import io.swagger.model.ContactorSearchcountRes;
import io.swagger.model.ContactorSearchpersonsReq;
import io.swagger.model.ContactorSearchpersonsRes;
import io.swagger.model.Error;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-10T06:15:45.348Z[GMT]")
@Api(value = "contactor", description = "the contactor API")
public interface ContactorApi {

    @ApiOperation(value = "添加联系人组", nickname = "contactorAddgroupPost", notes = "", response = ContactorAddgroupRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "联系人管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = ContactorAddgroupRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/contactor/addgroup",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ContactorAddgroupRes> contactorAddgroupPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContactorAddgroupReq body
);


    @ApiOperation(value = "添加联系人至联系人组", nickname = "contactorAddpersonsPost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "联系人管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/contactor/addpersons",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> contactorAddpersonsPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContactorAddpersonsReq body
);


    @ApiOperation(value = "删除联系人组", nickname = "contactorDeletegroupPost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "联系人管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/contactor/deletegroup",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> contactorDeletegroupPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContactorDeletegroupReq body
);


    @ApiOperation(value = "删除联系人组中的联系人", nickname = "contactorDeletepersonsPost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "联系人管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/contactor/deletepersons",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> contactorDeletepersonsPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContactorDeletepersonsReq body
);


    @ApiOperation(value = "编辑联系人组", nickname = "contactorEditgroupPost", notes = "", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "联系人管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功"),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/contactor/editgroup",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> contactorEditgroupPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContactorEditgroupReq body
);


    @ApiOperation(value = "获取分组下所有联系人", nickname = "contactorGetPost", notes = "", response = ContactorGetRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "联系人管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = ContactorGetRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/contactor/get",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ContactorGetRes> contactorGetPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContactorGetReq body
);


    @ApiOperation(value = "获取所有联系人分组", nickname = "contactorGetgroupsPost", notes = "", response = ContactorGetgroupsRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "联系人管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = ContactorGetgroupsRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/contactor/getgroups",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<ContactorGetgroupsRes> contactorGetgroupsPost();


    @ApiOperation(value = "获取联系人组中的联系人", nickname = "contactorGetpersonsPost", notes = "", response = ContactorGetpersonsRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "联系人管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = ContactorGetpersonsRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/contactor/getpersons",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ContactorGetpersonsRes> contactorGetpersonsPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContactorGetpersonsReq body
);


    @ApiOperation(value = "在联系人组搜索用户和联系人组信息", nickname = "contactorSearchPost", notes = "", response = ContactorSearchRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "联系人管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = ContactorSearchRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/contactor/search",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ContactorSearchRes> contactorSearchPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContactorSearchReq body
);


    @ApiOperation(value = "搜索用户和联系人组信息总数", nickname = "contactorSearchcountPost", notes = "", response = ContactorSearchcountRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "联系人管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = ContactorSearchcountRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/contactor/searchcount",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ContactorSearchcountRes> contactorSearchcountPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContactorSearchcountReq body
);


    @ApiOperation(value = "搜索联系人组中的联系人", nickname = "contactorSearchpersonsPost", notes = "", response = ContactorSearchpersonsRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "联系人管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = ContactorSearchpersonsRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/contactor/searchpersons",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ContactorSearchpersonsRes> contactorSearchpersonsPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContactorSearchpersonsReq body
);

}


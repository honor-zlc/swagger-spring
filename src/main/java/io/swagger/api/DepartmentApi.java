/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.DepartmentGetrootsRes;
import io.swagger.model.DepartmentGetsubdepsRes;
import io.swagger.model.DepartmentGetsubusersReq;
import io.swagger.model.DepartmentGetsubusersRes;
import io.swagger.model.DepartmentSearchReq;
import io.swagger.model.DepartmentSearchRes;
import io.swagger.model.DepartmentSearchcountReq;
import io.swagger.model.DepartmentSearchcountRes;
import io.swagger.model.Error;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-10T06:15:45.348Z[GMT]")
@Api(value = "department", description = "the department API")
public interface DepartmentApi {

    @ApiOperation(value = "获取用户所能访问的根部门信息", nickname = "departmentGetrootsPost", notes = "", response = DepartmentGetrootsRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "部门管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = DepartmentGetrootsRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/department/getroots",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<DepartmentGetrootsRes> departmentGetrootsPost();


    @ApiOperation(value = "获取子部门信息", nickname = "departmentGetsubdepsPost", notes = "", response = DepartmentGetsubdepsRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "部门管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = DepartmentGetsubdepsRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/department/getsubdeps",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<DepartmentGetsubdepsRes> departmentGetsubdepsPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody DepartmentGetsubusersReq body
);


    @ApiOperation(value = "获取部门下的子用户信息", nickname = "departmentGetsubusersPost", notes = "", response = DepartmentGetsubusersRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "部门管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = DepartmentGetsubusersRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/department/getsubusers",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<DepartmentGetsubusersRes> departmentGetsubusersPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody DepartmentGetsubusersReq body
);


    @ApiOperation(value = "在组织下搜索用户和部门信息", nickname = "departmentSearchPost", notes = "", response = DepartmentSearchRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "部门管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = DepartmentSearchRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/department/search",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<DepartmentSearchRes> departmentSearchPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody DepartmentSearchReq body
);


    @ApiOperation(value = "在组织下搜索获取搜索数目", nickname = "departmentSearchcountPost", notes = "", response = DepartmentSearchcountRes.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "部门管理", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "接口调用成功", response = DepartmentSearchcountRes.class),
        @ApiResponse(code = 400, message = "接口调用失败，HTTP状态码可能为4xx、5xx，具体参见错误码说明章节", response = Error.class) })
    @RequestMapping(value = "/department/searchcount",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<DepartmentSearchcountRes> departmentSearchcountPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody DepartmentSearchcountReq body
);

}

